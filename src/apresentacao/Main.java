package apresentacao;

import static logicajogo.Elemento.*;

import java.io.FileNotFoundException;

import logicajogo.Elemento;
import logicajogo.EstruturaMapas;
import logicajogo.HashMap;
import logicajogo.Mapa;
import logicajogo.Tabuleiro;

/**
 * Classe de execução Principal, efetua a criação dos mapas e a execução do Jogo
 * @author Francisco Gonçalves da Mota Longhini
 * @author Gabriel Sousa Kraszczuk*/
public class Main {

	public static void main(String[] args) throws FileNotFoundException {
		// Construção do Mapa do Jogo
		// Mapa Inicial
		final Elemento[][] mapa1 = {
				{AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,              AGUA,  AGUA,         AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA},
				{AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,              AGUA,  AGUA,         AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA},
				{AGUA,  TERRA,  TERRA, TERRA, TERRA, TERRA, TERRA,            TERRA, TERRA,        TERRA, TERRA, TERRA, TERRA, TERRA,  AGUA},
				{TERRA,  TERRA, TERRA, TERRA, TERRA, TERRA, TERRA,            TERRA, PORTAL, TERRA, TERRA, TERRA, TERRA, TERRA, TERRA},
				{GRAMA, GRAMA, GRAMA, GRAMA, GRAMA, GRAMA, PLACA,            GRAMA, GRAMA,        GRAMA, GRAMA, GRAMA, GRAMA, GRAMA, GRAMA},
				{GRAMA, GRAMA, GRAMA, GRAMA, GRAMA, PEDRA, PEDRA,             PEDRA, GRAMA,        GRAMA, GRAMA, GRAMA, GRAMA, GRAMA, GRAMA},
				{GRAMA, GRAMA, GRAMA, GRAMA, PEDRA, PEDRA, PERSONAGEMUPSTONE, PEDRA, PEDRA,        GRAMA, GRAMA, GRAMA, GRAMA, RUBI,  GRAMA},
				{GRAMA, GRAMA, GRAMA, GRAMA, PEDRA, PEDRA, PEDRA,             PEDRA, PEDRA,        GRAMA, GRAMA, GRAMA, GRAMA, GRAMA, GRAMA},
				{GRAMA, GRAMA, RUBI,  GRAMA, GRAMA, PEDRA, PEDRA,             PEDRA, GRAMA,        GRAMA, GRAMA, GRAMA, GRAMA, GRAMA, GRAMA},
		};
		// Mapa Inicial Esquerda
		final Elemento[][] mapa2 = {
				{AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  PEDRA,  AGUA,         AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA},
				{AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  PEDRA,  AGUA,         AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA},
				{AGUA,  AGUA,  AGUA, AGUA, AGUA, TERRA, TERRA,PEDRA, TERRA,        TERRA, TERRA, TERRA, TERRA, TERRA,  AGUA},
				{AGUA,  AGUA, AGUA, AGUA, TERRA, TERRA, TERRA,PEDRA, PEDRAENFEITE, TERRA, TERRA, TERRA, TERRA, TERRA, TERRA},
				{AGUA, AGUA, AGUA, TERRA, TERRA, TERRA, TERRA, PEDRA, TERRA,        TERRA, TERRA, TERRA, TERRA, TERRA, PERSONAGEMLEFT},
				{AGUA, AGUA, TERRA, TERRA, TERRA, TERRA, TERRA, PEDRA, TERRA,        TERRA, TERRA, TERRA, TERRA, GRAMA, GRAMA},
				{AGUA, AGUA, TERRA, TERRA, TERRA, TERRA, TERRA, PEDRA, PEDRA,        PEDRA, PEDRA, PEDRA, PEDRA, RUBI,  GRAMA},
				{AGUA, AGUA, TERRA, TERRA, TERRA, TERRA, TERRA, PEDRA, TERRA,        TERRA, TERRA, GRAMA, GRAMA, GRAMA, GRAMA},
				{AGUA, AGUA, RUBI,  TERRA, TERRA, TERRA, TERRA, PEDRA, TERRA,        TERRA, GRAMA, GRAMA, GRAMA, GRAMA, GRAMA},
		};
		// Mapa Inicial Esquerda -> CIMA
		final Elemento[][] mapa3 = {
				{AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,               AGUA,  AGUA, AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA},
				{AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA,               AGUA,  AGUA, AGUA,  AGUA,  AGUA,  AGUA,  AGUA,  AGUA},
				{AGUA,  AGUA,  AGUA, AGUA, AGUA, AGUA, TERRA,PASSAGEM,             TERRA, AGUA, AGUA, AGUA, AGUA, AGUA,  AGUA},
				{AGUA,  AGUA, AGUA, AGUA, AGUA, AGUA, PLACA,PEDRA,              TERRA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA},
				{AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, PEDRA,              AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA},
				{AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, PEDRA,              AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA},
				{AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, PEDRA,              AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA},
				{AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, PEDRA,              AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA},
				{AGUA, AGUA, AGUA,  AGUA, AGUA, AGUA, AGUA, PERSONAGEMUPSTONE, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA, AGUA},
		};
		// Mapa Inicial Esquerda -> CIMA.Caverna
		final Elemento[][] mapa3Caverna = {
				{PAREDECAVERNACANTOSUPERIORESQUERDO,  PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR, PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR, PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNAMEIOSUPERIOR,  PAREDECAVERNACANTOSUPERIORDIREITO},
				{PAREDECAVERNAMEIOESQUERDO,  VIDA,  TERRACAVERNA1,  TERRACAVERNA1,  TERRACAVERNA1,  TERRACAVERNA1,  TERRACAVERNA1, TERRACAVERNA1,  TERRACAVERNA1, TERRACAVERNA1,  TERRACAVERNA1,  TERRACAVERNA1,  TERRACAVERNA1,  TERRACAVERNA1,  PAREDECAVERNAMEIODIREITO},
				{PAREDECAVERNAMEIOESQUERDO,  TERRACAVERNA1,  TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1,TERRACAVERNA1,TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1,  PAREDECAVERNAMEIODIREITO},
				{PAREDECAVERNAMEIOESQUERDO,  TERRACAVERNA1, TERRACAVERNA1, LAVA, LAVA, LAVA, LAVA,TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, PAREDECAVERNAMEIODIREITO},
				{PAREDECAVERNAMEIOESQUERDO, TERRACAVERNA1, TERRACAVERNA1, LAVA, LAVA, LAVA, LAVA, LAVA, LAVA, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, PAREDECAVERNAMEIODIREITO},
				{PAREDECAVERNAMEIOESQUERDO, TERRACAVERNA1, TERRACAVERNA1, LAVA, LAVA, LAVA, LAVA, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, PAREDECAVERNAMEIODIREITO},
				{PAREDECAVERNAMEIOESQUERDO, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, PAREDECAVERNAMEIODIREITO},
				{PAREDECAVERNAMEIOESQUERDO, TERRACAVERNA1, TERRACAVERNA1, PERSONAGEMUPDIRTYCAVE1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, TERRACAVERNA1, PAREDECAVERNAMEIODIREITO},
				{PAREDECAVERNACANTOINFERIORESQUERDO, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR,  PASSAGEMVOLTA, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNAMEIOINFERIOR, PAREDECAVERNACANTOINFERIORDIREITO},
		};
		Mapa mapaInicial = new Mapa(mapa1);
		mapaInicial.adicionarMensagemMapa("<html> <font color='blue'> Seja Bem-Vindo</font> ao <font color='red'>LINK GAMES</font>"
				+ "<br> <br>OBJETIVOS: <font color='green'> <br>-> Coletar Rubis <br>"
				+ " -> Encontrar a Chave do Portal </font><br><br>"
				+ "<font color='orange'> BOA SORTE!</font> </html>",new FabricaIcones().obterIcone(PERSONAGEMDOWN));
		Mapa mapaInicialEsquerda = new Mapa(mapa2);
		Mapa mapaInicialEsquerdaCima = new Mapa(mapa3);
		mapaInicialEsquerdaCima.adicionarMensagemMapa("<html> <font color='red'> ATENÇÃO!</font>"
				+ "<br> <br>A Caverna a Seguir é Considerada uma Caverna PERIGOSA!",new FabricaIcones().obterIcone(PASSAGEM));
		mapaInicialEsquerdaCima.adicionarMapas(mapa3Caverna);
		
		EstruturaMapas estruturaMapaIncial = new EstruturaMapas(mapaInicial);
		estruturaMapaIncial.adicionarMapaEsquerda(mapaInicialEsquerda);
		estruturaMapaIncial.getEsquerda().adicionarMapaCima(mapaInicialEsquerdaCima);
		
		Tabuleiro tabuleiro = new Tabuleiro(estruturaMapaIncial);
		tabuleiro.setSaida(new TelaJogo(tabuleiro, new FabricaIcones()));
		tabuleiro.iniciarJogo();
		
//		HashMap inv = new HashMap(10);
//		float chaveFinal = inv.armazenarObjeto("CHAVEVERDE");
//		System.out.println(chaveFinal);
//		chaveFinal = inv.armazenarObjeto("CHAVEVERDE");
//		chaveFinal = inv.armazenarObjeto("CHAVEVERDE");
//		chaveFinal = inv.armazenarObjeto("CHAVEVERDE");
//		chaveFinal = inv.armazenarObjeto(mapaInicial);
//		System.out.println(chaveFinal);
//		System.out.println(inv.retornarObjeto((float) 8.4));
//		inv.removerObjeto((float) 8);
//		System.out.println(inv.retornarObjeto((float) 8.2));
//		chaveFinal = inv.armazenarObjeto("CHAVEVERDE");
//		System.out.println(chaveFinal);
//		System.out.println();
//		System.out.println(inv.retornarObjeto((float) 8.0));
//		System.out.println(inv.retornarObjeto((float) 8.1));
//		System.out.println(inv.retornarObjeto((float) 8.2));
//		System.out.println(inv.retornarObjeto((float) 8.3));
//		System.out.println(inv.retornarObjeto((float) 9.0));
	}
}
